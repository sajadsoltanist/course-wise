"""Initial database schema with all models

Revision ID: be1e95f6db4f
Revises: 
Create Date: 2025-09-05 23:03:48.909908

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'be1e95f6db4f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Apply migration changes."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('telegram_user_id', sa.BigInteger(), nullable=False, comment='Telegram user ID for bot integration'),
    sa.Column('student_number', sa.String(length=20), nullable=True, comment='University student number'),
    sa.Column('entry_year', sa.Integer(), nullable=True, comment='Entry year (1401, 1402, 1403, etc.) - determines curriculum'),
    sa.Column('current_semester', sa.Integer(), nullable=True, comment='Current semester number (1-8+)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the student account is active'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Primary key for the table'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_students_entry_year'), 'students', ['entry_year'], unique=False)
    op.create_index(op.f('ix_students_student_number'), 'students', ['student_number'], unique=True)
    op.create_index(op.f('ix_students_telegram_user_id'), 'students', ['telegram_user_id'], unique=True)
    op.create_table('user_sessions',
    sa.Column('telegram_user_id', sa.BigInteger(), nullable=False, comment='Telegram user ID for session identification'),
    sa.Column('current_step', sa.String(length=50), nullable=False, comment='Current conversation step (start, waiting_grades, etc.)'),
    sa.Column('session_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Flexible JSON storage for session-specific data'),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False, comment='Session expiration timestamp'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Primary key for the table'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.CheckConstraint("current_step IN ('start', 'waiting_student_number', 'waiting_major_semester', 'confirming_registration', 'waiting_grades', 'confirming_grades', 'waiting_preferences', 'showing_recommendation', 'completed')", name='check_valid_step'),
    sa.CheckConstraint('expires_at > created_at', name='check_valid_expiration'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_active', 'user_sessions', ['telegram_user_id', 'expires_at'], unique=False)
    op.create_index('idx_session_expires', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_session_step', 'user_sessions', ['current_step'], unique=False)
    op.create_index('idx_session_telegram_user', 'user_sessions', ['telegram_user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_telegram_user_id'), 'user_sessions', ['telegram_user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Revert migration changes."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_telegram_user_id'), table_name='user_sessions')
    op.drop_index('idx_session_telegram_user', table_name='user_sessions')
    op.drop_index('idx_session_step', table_name='user_sessions')
    op.drop_index('idx_session_expires', table_name='user_sessions')
    op.drop_index('idx_session_active', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_students_telegram_user_id'), table_name='students')
    op.drop_index(op.f('ix_students_student_number'), table_name='students')
    op.drop_index(op.f('ix_students_entry_year'), table_name='students')
    op.drop_table('students')
    # ### end Alembic commands ### 